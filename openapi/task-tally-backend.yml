---
openapi: 3.1.0
components:
  schemas:
    CredentialDto:
      type: object
      properties:
        name:
          type: string
        provider:
          type: string
        scope:
          type: string
        secretRef:
          type: string
        knownHostsRef:
          type: string
        passphraseRef:
          type: string
        createdAt:
          $ref: "#/components/schemas/Instant"
    HostKeyResponse:
      type: object
      properties:
        hostname:
          type: string
          description: The hostname that was queried
        hostKeys:
          type: array
          items:
            type: string
          description: List of SSH host key entries
        knownHosts:
          type: string
          description: Known hosts content in standard format
    Instant:
      type: string
      format: date-time
      examples:
      - 2022-03-10T16:15:50Z
    OutcomeDto:
      type: object
      required:
      - prefix
      - description
      properties:
        id:
          type: integer
          format: int64
        phase:
          $ref: "#/components/schemas/PhaseDto"
        prefix:
          type: string
          pattern: \S
        description:
          type: string
          pattern: \S
        notes:
          type: string
    PhaseDto:
      type: object
      required:
      - name
      - track
      - product
      - environment
      properties:
        name:
          type: string
          pattern: \S
        track:
          type: string
          pattern: \S
        product:
          type: string
          pattern: \S
        environment:
          type: string
          pattern: \S
    SshAvailabilityResponse:
      type: object
      properties:
        hostname:
          type: string
          description: The hostname that was checked
        sshAvailable:
          type: boolean
          description: Whether SSH service is available on port 22
    SshKeyCreateRequest:
      type: object
      properties:
        name:
          type: string
        provider:
          type: string
        privateKeyPem:
          type: string
        knownHosts:
          type: string
        passphrase:
          type: string
        hostname:
          type: string
    SshKeyGenerateRequest:
      type: object
      properties:
        name:
          type: string
        provider:
          type: string
        comment:
          type: string
        knownHosts:
          type: string
        passphrase:
          type: string
        hostname:
          type: string
    SshPublicKeyResponse:
      type: object
      properties:
        publicKey:
          type: string
        fingerprintSha256:
          type: string
        name:
          type: string
        provider:
          type: string
    TemplateDto:
      type: object
      required:
      - name
      - repositoryUrl
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          pattern: \S
        description:
          type: string
        repositoryUrl:
          type: string
          pattern: \S
        provider:
          type: string
          pattern: ^(github|gitlab)$
        defaultBranch:
          type: string
        sshKeyName:
          type: string
    ValidateRequest:
      type: object
      properties:
        provider:
          type: string
        owner:
          type: string
        repo:
          type: string
        branch:
          type: string
        credentialName:
          type: string
  securitySchemes:
    SecurityScheme:
      type: openIdConnect
      openIdConnectUrl: http://localhost:8080/realms/tasktally/.well-known/openid-configuration
      description: Authentication
paths:
  /api/git/ssh/validate:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateRequest"
        required: true
      responses:
        "200":
          description: OK
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
        "400":
          description: Bad Request
      summary: Validate
      tags:
      - Git Ssh Resource
      security:
      - SecurityScheme:
        - user
  /api/ssh/host-keys/{hostname}:
    get:
      summary: Fetch SSH host keys from a remote server
      description: "Fetches SSH host keys from the specified hostname, similar to\
        \ ssh-keyscan"
      tags:
      - SSH Host Keys
      parameters:
      - name: hostname
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Host keys fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HostKeyResponse"
        "400":
          description: Invalid hostname
        "500":
          description: Failed to fetch host keys
  /api/ssh/host-keys/{hostname}/check:
    get:
      summary: Check if SSH service is available on a host
      description: Checks if the specified hostname has SSH service available on port
        22
      tags:
      - SSH Host Keys
      parameters:
      - name: hostname
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: SSH service availability checked
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SshAvailabilityResponse"
  /api/users/{userId}/ssh-keys:
    get:
      summary: List SSH keys for user
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of SSH credential references
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CredentialDto"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      tags:
      - Ssh Keys Resource
      security:
      - SecurityScheme:
        - user
    post:
      summary: Create SSH key for user
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SshKeyCreateRequest"
        required: true
      responses:
        "201":
          description: Created
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
        "400":
          description: Bad Request
      tags:
      - Ssh Keys Resource
      security:
      - SecurityScheme:
        - user
  /api/users/{userId}/ssh-keys/generate:
    post:
      summary: Generate SSH keypair for user
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SshKeyGenerateRequest"
        required: true
      responses:
        "201":
          description: Created
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
        "400":
          description: Bad Request
      tags:
      - Ssh Keys Resource
      security:
      - SecurityScheme:
        - user
  /api/users/{userId}/ssh-keys/{name}:
    delete:
      summary: Delete SSH key
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      tags:
      - Ssh Keys Resource
      security:
      - SecurityScheme:
        - user
  /api/users/{userId}/ssh-keys/{name}/public:
    get:
      summary: Get OpenSSH public key for credential
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SshPublicKeyResponse"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      tags:
      - Ssh Keys Resource
      security:
      - SecurityScheme:
        - user
  /api/users/{userId}/templates:
    get:
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TemplateDto"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: List
      tags:
      - Template Resource
      security:
      - SecurityScheme:
        - user
    post:
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplateDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateDto"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
        "400":
          description: Bad Request
      summary: Create
      tags:
      - Template Resource
      security:
      - SecurityScheme:
        - user
  /api/users/{userId}/templates/{id}:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplateDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateDto"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
        "400":
          description: Bad Request
      summary: Update
      tags:
      - Template Resource
      security:
      - SecurityScheme:
        - user
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Delete
      tags:
      - Template Resource
      security:
      - SecurityScheme:
        - user
  /api/users/{userId}/templates/{templateId}/outcomes:
    get:
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OutcomeDto"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: List
      tags:
      - Outcome Resource
      security:
      - SecurityScheme:
        - user
    delete:
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Delete All
      tags:
      - Outcome Resource
      security:
      - SecurityScheme:
        - user
    post:
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OutcomeDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutcomeDto"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
        "400":
          description: Bad Request
      summary: Create
      tags:
      - Outcome Resource
      security:
      - SecurityScheme:
        - user
  /api/users/{userId}/templates/{templateId}/outcomes/{id}:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: templateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OutcomeDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutcomeDto"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
        "400":
          description: Bad Request
      summary: Update
      tags:
      - Outcome Resource
      security:
      - SecurityScheme:
        - user
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: templateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      summary: Delete
      tags:
      - Outcome Resource
      security:
      - SecurityScheme:
        - user
tags:
- name: SSH Host Keys
  description: SSH host key management operations
info:
  title: task-tally-backend API
  version: 1.0.0-SNAPSHOT
