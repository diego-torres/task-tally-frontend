---
openapi: 3.1.0
components:
  schemas:
    Activity:
      type: object
      required:
      - role
      - task
      properties:
        role:
          type: string
          pattern: \S
        task:
          type: string
          pattern: \S
        estimateHours:
          type: integer
          format: int32
          minimum: 0
    CredentialDto:
      type: object
      properties:
        name:
          type: string
        provider:
          type: string
        scope:
          type: string
        secretRef:
          type: string
        knownHostsRef:
          type: string
        passphraseRef:
          type: string
        createdAt:
          $ref: "#/components/schemas/Instant"
    CredentialRequest:
      type: object
      required:
      - name
      - provider
      - scope
      - secretRef
      properties:
        name:
          type: string
          pattern: \S
        provider:
          type: string
          pattern: \S
        scope:
          type: string
          pattern: \S
        secretRef:
          type: string
          pattern: \S
        knownHostsRef:
          type: string
        passphraseRef:
          type: string
    CredentialResponse:
      type: object
      properties:
        name:
          type: string
        provider:
          type: string
        scope:
          type: string
    GitLinkRequest:
      type: object
      required:
      - name
      - ref
      properties:
        name:
          type: string
          pattern: \S
        ref:
          type: string
          pattern: \S
        scope:
          type: string
    Instant:
      type: string
      format: date-time
      examples:
      - 2022-03-10T16:15:50Z
    PreferencesDto:
      type: object
      required:
      - ui
      properties:
        ui:
          type: object
          additionalProperties: {}
        defaultGitProvider:
          type: string
        version:
          type: integer
          format: int32
    ProjectTemplate:
      type: object
      required:
      - name
      - activities
      properties:
        name:
          type: string
          pattern: \S
        description:
          type: string
        activities:
          type: array
          items:
            $ref: "#/components/schemas/Activity"
    SshKeyCreateRequest:
      type: object
      properties:
        name:
          type: string
        provider:
          type: string
        privateKeyPem:
          type: string
        knownHosts:
          type: string
        passphrase:
          type: string
    TemplateDto:
      type: object
      required:
      - name
      - repositoryUrl
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          pattern: \S
        description:
          type: string
        repositoryUrl:
          type: string
          pattern: \S
    TemplateFile:
      type: object
      required:
      - name
      - yaml
      properties:
        name:
          type: string
          pattern: \S
        yaml:
          type: string
          pattern: \S
    TemplatePullRequest:
      type: object
      required:
      - repoUri
      - path
      properties:
        repoUri:
          type: string
          pattern: \S
        path:
          type: string
          pattern: \S
        branch:
          type: string
        credentialName:
          type: string
    TemplatePushRequest:
      type: object
      required:
      - owner
      - repo
      - path
      - branch
      - message
      - credentialName
      - files
      properties:
        owner:
          type: string
          pattern: \S
        repo:
          type: string
          pattern: \S
        path:
          type: string
          pattern: \S
        branch:
          type: string
          pattern: \S
        message:
          type: string
          pattern: \S
        credentialName:
          type: string
          pattern: \S
        files:
          type: array
          items:
            $ref: "#/components/schemas/TemplateFile"
    ValidateRequest:
      type: object
      properties:
        provider:
          type: string
        owner:
          type: string
        repo:
          type: string
        branch:
          type: string
        credentialName:
          type: string
paths:
  /api/git/link:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GitLinkRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialResponse"
        "400":
          description: Bad Request
      summary: Link
      tags:
      - Git Resource
  /api/git/ssh/validate:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateRequest"
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Validate
      tags:
      - Git Ssh Resource
  /api/git/templates/pull:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplatePullRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectTemplate"
        "400":
          description: Bad Request
      summary: Pull Templates
      tags:
      - Git Resource
  /api/git/templates/push:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplatePushRequest"
        required: true
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
      summary: Push Templates
      tags:
      - Git Resource
  /api/preferences/me:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PreferencesDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreferencesDto"
        "400":
          description: Bad Request
      summary: Update
      tags:
      - Preferences Resource
    get:
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreferencesDto"
      summary: Get
      tags:
      - Preferences Resource
  /api/preferences/me/credentials:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CredentialRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CredentialResponse"
        "400":
          description: Bad Request
      summary: Add Credential
      tags:
      - Preferences Resource
  /api/preferences/me/credentials/{name}:
    delete:
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
      summary: Delete
      tags:
      - Preferences Resource
  /api/users/{userId}/ssh-keys:
    get:
      summary: List SSH keys for user
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: X-User-Id
        in: header
        schema:
          type: string
      responses:
        "200":
          description: List of SSH credential references
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CredentialDto"
      tags:
      - Ssh Keys Resource
    post:
      summary: Create SSH key for user
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: X-User-Id
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SshKeyCreateRequest"
        required: true
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
      tags:
      - Ssh Keys Resource
  /api/users/{userId}/ssh-keys/{name}:
    delete:
      summary: Delete SSH key
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: X-User-Id
        in: header
        schema:
          type: string
      responses:
        "204":
          description: Deleted
      tags:
      - Ssh Keys Resource
  /api/users/{userId}/templates:
    get:
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TemplateDto"
      summary: List
      tags:
      - Template Resource
    post:
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplateDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateDto"
        "400":
          description: Bad Request
      summary: Create
      tags:
      - Template Resource
  /api/users/{userId}/templates/{id}:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplateDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateDto"
        "400":
          description: Bad Request
      summary: Update
      tags:
      - Template Resource
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
      summary: Delete
      tags:
      - Template Resource
info:
  title: task-tally-backend API
  version: 1.0.0-SNAPSHOT
